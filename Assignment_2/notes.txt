main task: generate AST for executable statements (not for declarations).

def. AST: abstract syntax tree:
	- input: stream of tokens
	- output: 
			* syntax tree (represents syntactic structure of the program)
			* syntax errors to the user
			
No symbol table required (declarations are stored in symbol table).

tasks:
	- define AST data structure for saving executable statements.
	- Extend the parser to generate the AST based on synthesized attributes.
	- Visualize AST, use Graphviz dot tool.
	- modify makefile to support dot calls and to generate png-files. 